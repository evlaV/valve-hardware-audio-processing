context.spa-libs = {
    audio.convert.* = audioconvert/libspa-audioconvert
    support.*       = support/libspa-support
}

context.modules = [
    {   name = libpipewire-module-filter-chain
        args = {
            node.name =  "filter-chain-source"
            node.description =  "Filter Chain Source"
            media.name =  "Filter Chain Source"
            filter.graph = {
                nodes = [
                    {
                        type = ladspa
                        name = rnnoise
                        plugin = /usr/lib/ladspa/librnnoise_ladspa.so
                        label = noise_suppressor_stereo
                        control = {
                            "VAD Threshold (%)" = 23.0
                            "VAD Grace Period (ms)" = 200
                        }
                    }
                    {
                        type = lv2
                        name = valve_deck_microphone
                        plugin = "https://faustlv2.bitbucket.io/valve_deck_microphone"
                        label = valve_deck_microphone
                    }
                ]
                links = [
                    { output = "rnnoise:Output (L)" input = "valve_deck_microphone:in0" }
                    { output = "rnnoise:Output (R)" input = "valve_deck_microphone:in1" }
                ]
            }
            capture.props = {
                node.name = "filter-chain-capture"
                node.passive = true
            }
            playback.props = {
                node.name = "filter-chain-source"
                media.class = Audio/Source/Internal
                filter.smart = true
                filter.smart.name = filter-chain-source

                filter.smart.target = { media.class = Audio/Source, alsa.card_name = acp5x }
                filter.smart.after = [ virtual-source ]
            }
        }
    }
]
