## This file will hide the audio filter nodes for all applications by setting
## specific permissions on them.
##
## For pulseaudio clients, the easiest way to do this is to remove exec 'x'
## permissions on the filter nodes as pulseaudio clients won't be abe to get
## any information from them, and therefore hiding them.
##
## On the other hand, for pipewire native clients, removing exec 'x' permissions
## on the filter nodes isn't enough because, unlike pulseaudio clients, pipewire
## native clients can still list available devices without getting any
## information from them. Therefore, we must only give link 'l' permissions on
## the filter nodes to completely hide them from the graph.
##
## Finally, we cannot just give link 'l' permissions on the filter nodes for
## pulseaudio clients because the pipewire-pulse layer needs to constantly know
## what nodes are being used by all streams. Giving only link 'l' permissions
## would hide the filters completely from the graph, causing pipewire-pulse to
## not send a proper reply to the client when a new stream is created, and
## stalling the stream forever.

access.rules = [
  #########################################################################
  ## Hide filters from flatpak access manager class pulseaudio clients
  {
    matches = [
      {
        access = "flatpak"
        media.category = "Manager"
        client.api = "pipewire-pulse"
      }
    ]
    actions = {
      update-props = {
        access = "flatpak-manager"
        default_permissions = "rwxml",
      }
      update-perms = [
        {
          matches = [
            { node.name = "output.virtual-sink"    }
            { node.name = "input.virtual-sink"     }
            { node.name = "output.virtual-source"  }
            { node.name = "input.virtual-source"   }
            { node.name = "filter-chain-capture"   }
            { node.name = "filter-chain-source"    }
            { node.name = "filter-chain-sink"      }
            { node.name = "filter-chain-playback"  }
          ]
          actions = {
            permissions = "rwml"
          }
        }
      ]
    }
  }

  #########################################################################
  ## Hide filters from flatpak access manager class pipewire native clients
  {
    matches = [
      {
        access = "flatpak"
        media.category = "Manager"
        client.api = "!\"pipewire-pulse\""
      }
    ]
    actions = {
      update-props = {
        access = "flatpak-manager"
        default_permissions = "rwxml",
      }
      update-perms = [
        {
          matches = [
            { node.name = "output.virtual-sink"    }
            { node.name = "input.virtual-sink"     }
            { node.name = "output.virtual-source"  }
            { node.name = "input.virtual-source"   }
            { node.name = "filter-chain-capture"   }
            { node.name = "filter-chain-source"    }
            { node.name = "filter-chain-sink"      }
            { node.name = "filter-chain-playback"  }
          ]
          actions = {
            permissions = "l"
          }
        }
      ]
    }
  }

  #########################################################################
  ## Hide filters from flatpak access misc pulseaudio clients
  {
    matches = [
      {
        access = "flatpak"
        media.category = "!\"Manager\""
        client.api = "pipewire-pulse"
      }
    ]
    actions = {
      update-props = {
        default_permissions = "rxl"
      }
      update-perms = [
        {
          matches = [
            { node.name = "output.virtual-sink"    }
            { node.name = "input.virtual-sink"     }
            { node.name = "output.virtual-source"  }
            { node.name = "input.virtual-source"   }
            { node.name = "filter-chain-capture"   }
            { node.name = "filter-chain-source"    }
            { node.name = "filter-chain-sink"      }
            { node.name = "filter-chain-playback"  }
          ]
          actions = {
            permissions = "rl"
          }
        }
      ]
    }
  }

  #########################################################################
  ## Hide filters from flatpak access misc pipewire native clients
  {
    matches = [
      {
        access = "flatpak"
        media.category = "!\"Manager\""
        client.api = "!\"pipewire-pulse\""
      }
    ]
    actions = {
      update-props = {
        default_permissions = "rxl"
      }
      update-perms = [
        {
          matches = [
            { node.name = "output.virtual-sink"    }
            { node.name = "input.virtual-sink"     }
            { node.name = "output.virtual-source"  }
            { node.name = "input.virtual-source"   }
            { node.name = "filter-chain-capture"   }
            { node.name = "filter-chain-source"    }
            { node.name = "filter-chain-sink"      }
            { node.name = "filter-chain-playback"  }
          ]
          actions = {
            permissions = "l"
          }
        }
      ]
    }
  }

  #########################################################################
  ## Hide filters from restricted access pulseaudio clients
  {
    matches = [
      {
        access = "restricted"
        client.api = "pipewire-pulse"
      }
    ]
    actions = {
      update-props = {
        default_permissions = "rxl"
      }
      update-perms = [
        {
          matches = [
            { node.name = "output.virtual-sink"    }
            { node.name = "input.virtual-sink"     }
            { node.name = "output.virtual-source"  }
            { node.name = "input.virtual-source"   }
            { node.name = "filter-chain-capture"   }
            { node.name = "filter-chain-source"    }
            { node.name = "filter-chain-sink"      }
            { node.name = "filter-chain-playback"  }
          ]
          actions = {
            permissions = "rl"
          }
        }
      ]
    }
  }

  #########################################################################
  ## Hide filters from restricted access pipewire native clients
  {
    matches = [
      {
        access = "restricted"
        client.api = "!\"pipewire-pulse\""
      }
    ]
    actions = {
      update-props = {
        default_permissions = "rxl"
      }
      update-perms = [
        {
          matches = [
            { node.name = "output.virtual-sink"    }
            { node.name = "input.virtual-sink"     }
            { node.name = "output.virtual-source"  }
            { node.name = "input.virtual-source"   }
            { node.name = "filter-chain-capture"   }
            { node.name = "filter-chain-source"    }
            { node.name = "filter-chain-sink"      }
            { node.name = "filter-chain-playback"  }
          ]
          actions = {
            permissions = "l"
          }
        }
      ]
    }
  }

  #########################################################################
  ## Hide filters from default access pulseaudio clients
  {
    matches = [
      {
        access = "default"
        client.api = "pipewire-pulse"
      }
    ]
    actions = {
      update-props = {
        default_permissions = "rwxml"
      }
      update-perms = [
        {
          matches = [
            { node.name = "output.virtual-sink"    }
            { node.name = "input.virtual-sink"     }
            { node.name = "output.virtual-source"  }
            { node.name = "input.virtual-source"   }
            { node.name = "filter-chain-capture"   }
            { node.name = "filter-chain-source"    }
            { node.name = "filter-chain-sink"      }
            { node.name = "filter-chain-playback"  }
          ]
          actions = {
            permissions = "rwml"
          }
        }
      ]
    }
  }

  ##################################################################
  ## Hide filters from default access pipewire natice clients
  {
    matches = [
      {
        access = "default"
        client.api = "!\"pipewire-pulse\""
      }
    ]
    actions = {
      update-props = {
        default_permissions = "rwxml"
      }
      update-perms = [
        {
          matches = [
            { node.name = "output.virtual-sink"    }
            { node.name = "input.virtual-sink"     }
            { node.name = "output.virtual-source"  }
            { node.name = "input.virtual-source"   }
            { node.name = "filter-chain-capture"   }
            { node.name = "filter-chain-source"    }
            { node.name = "filter-chain-sink"      }
            { node.name = "filter-chain-playback"  }
          ]
          actions = {
            permissions = "l"
          }
        }
      ]
    }
  }

  #########################################################################
  ## Hide filters from unrestricted access pulseaudio clients that are not
  ## pipewire or wireplumber
  {
    matches = [
      {
        access = "unrestricted"
        client.api = "pipewire-pulse"
        application.name = "!\"pipewire\""
        application.name = "!\"WirePlumber\""
        application.name = "!\"WirePlumber [export]\""
      }
    ]
    actions = {
      update-props = {
        default_permissions = "rwxml"
      }
      update-perms = [
        {
          matches = [
            { node.name = "output.virtual-sink"    }
            { node.name = "input.virtual-sink"     }
            { node.name = "output.virtual-source"  }
            { node.name = "input.virtual-source"   }
            { node.name = "filter-chain-capture"   }
            { node.name = "filter-chain-source"    }
            { node.name = "filter-chain-sink"      }
            { node.name = "filter-chain-playback"  }
          ]
          actions = {
            permissions = "rwml"
          }
        }
      ]
    }
  }

  #########################################################################
  ## Hide filters from unrestricted access pipewire native clients that are not
  ## pipewire or wireplumber
  {
    matches = [
      {
        access = "unrestricted"
        client.api = "!\"pipewire-pulse\""
        application.name = "!\"pipewire\""
        application.name = "!\"WirePlumber\""
        application.name = "!\"WirePlumber [export]\""
      }
    ]
    actions = {
      update-props = {
        default_permissions = "rwxml"
      }
      update-perms = [
        {
          matches = [
            { node.name = "output.virtual-sink"    }
            { node.name = "input.virtual-sink"     }
            { node.name = "output.virtual-source"  }
            { node.name = "input.virtual-source"   }
            { node.name = "filter-chain-capture"   }
            { node.name = "filter-chain-source"    }
            { node.name = "filter-chain-sink"      }
            { node.name = "filter-chain-playback"  }
          ]
          actions = {
            permissions = "l"
          }
        }
      ]
    }
  }
]
